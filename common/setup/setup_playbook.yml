#!/usr/bin/ansible-playbook

- hosts: all

  vars:
    default_ost_images_repo_url: 'https://templates.ovirt.org/yum/'
    default_ost_images_rpms:
      - ost-images-el8stream-engine-installed
      - ost-images-el8stream-host-installed
      - ost-images-node-base
      - ost-images-storage-base

  tasks:
    - name: enable nested virtualization on intel
      lineinfile:
        path: /etc/modprobe.d/kvm.conf
        create: yes
        line: options kvm_intel nested=1
      become: true
      notify: reboot
      when: ansible_facts['processor'][1] == 'GenuineIntel'

    - name: enable nested virtualization on amd
      lineinfile:
        path: /etc/modprobe.d/kvm.conf
        create: yes
        line: options kvm_amd nested=1
      become: true
      notify: reboot
      when: ansible_facts['processor'][1] == 'AuthenticAMD'

    - name: set accept_ra on ipv6
      lineinfile:
        path: /etc/sysctl.d/90-ost-ipv6-ra.conf
        create: yes
        line: net.ipv6.conf.all.accept_ra=2
      become: true

    - name: increase per-user FD limit
      lineinfile:
        path: /etc/security/limits.d/ost.conf
        create: yes
        line: "*    soft    nofile    65535"
      become: true

    - name: set up ost-images repo
      yum_repository:
        name: ost-images
        description: ost-images
        baseurl: "{{ ost_images_repo_url | default(default_ost_images_repo_url) }}"
        gpgcheck: no
      become: true

    - name: setup distro-related vars
      set_fact:
        el9: "{{ ansible_facts['distribution_major_version']|int == 9 }}"

    - name: setup package names based on distro-related
      set_fact:
        python_pkg: "{{ 'python3' if el9 else 'python39' }}"
        ansible_pkg: ansible-core

    - name: install packages and cleanup epel if necessary

      block:
        - name: install epel
          dnf:
            name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
            disable_gpg_check: yes
          when: not el9
          become: true
          register: epel

        - name: make sure any version of ansible is available
          dnf:
            name:
              - "{{ ansible_pkg }}"
            state: present
          become: true

        - name: install required packages for OST
          dnf:
            name:
              - gcc
              - git
              - libcurl-devel
              - libvirt
              - libxml2-devel
              - openssl
              - openssl-devel
              - "{{ python_pkg }}"
              - "{{ python_pkg }}-devel"
              - qemu-kvm
            state: latest
          become: true

        - name: install required packages for building ost-images
          dnf:
            name:
              - autoconf
              - automake
              - createrepo
              - jq
              - libguestfs-tools-c
              - libvirt-client
              - libvirt-daemon-config-network
              - make
              - qemu-img
              - rpm-build
              - virt-install
            state: latest
          become: true

      always:
        - name: remove epel if it was added
          dnf:
            name: epel-release-8
            state: absent
          when: epel.changed
          become: true

    - name: install ost images
      dnf:
        name: "{{ ost_images_rpms | default(default_ost_images_rpms) }}"
      become: true

    - name: add user to relevant groups
      user:
        name: "{{ ansible_facts['user_id'] }}"
        groups:
          - qemu
        append: yes
      become: true

    - name: add qemu to the user group
      user:
        name: qemu
        groups:
          - "{{ ansible_facts['user_id'] }}"
        append: yes
      become: true

    - name: allow user to manage libvirt
      template:
        dest: /etc/polkit-1/localauthority/50-local.d/ost-libvirt-{{ ansible_facts['user_id'] }}.pkla
        group: root
        mode: '0644'
        owner: root
        src: ost-libvirt.pkla.in
      become: true

    - name: restart polkit
      systemd:
        name: polkit
        state: restarted
      become: true

    - name: set user home directory permissions
      file:
        path: "{{ ansible_facts['user_dir'] }}"
        mode: 0751
      become: true

    - name: allow virtlogd to write console logs
      shell: semanage permissive -a virtlogd_t
      become: true

    - name: allow port 2222 for IPv6 socks proxy
      shell: firewall-cmd --state || systemctl start firewalld; firewall-cmd --permanent --add-port 2222/tcp --zone=libvirt
      become: true

  handlers:
    - name: reboot
      debug:
        msg: Please reboot to apply all the changes.
